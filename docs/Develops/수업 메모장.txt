<11/22>

C:\Users\서울디지털인재개발원\Downloads  => CLI

CLI(모든 OS는 CLI 방식으로 돌아감) 
vs
 GUI(사용자의 편의를 위해 구현한 방식, 그래픽 방식, 마우스를 이용)  => 폴더

C:\Develops => 수업 폴더

vscode에서 docs/blog/API를 적극 활용하기

vscode에서 study_publishings은 루트라 명칭

<temp.html 프로젝트 단위 경로로 기술>
=> docs\temp.html 
1. C:Developes\study_publishings\docs\temp.html (X) =>절대경로
2. study_publishings\docs\temp.html (X) => 상대경로 
루트는 고귀한 존재이므로 웬만하면 경로를 표현할 때 표현하지 않음

경로를 표현할 때는 '상대경로'로 표현함(서비스할 때 결정적이기 때문)

shift+! => key assistant
태그 = elements
ctrl + / => <!-- -->: 주석 태그

https://www.daum.net/?t__nil_top=refresh(포털)

http://127.0.0.1:5500/docs/welcome.html(live server를 통해 브라우저를 열었을 때)

file:///C:/Develops/study_publishings/docs/welcome.html (탐색기를 통해 브라우저를 열었을 때)


=>https://, file:///는 경로에 대한 규칙/ 이것을 포로토콜이라고 함
remote에서 가져오는건지, local에서 가져오는건지를 알려주는 규칙

127.0.0.1:5500 => IP라는 숫자

file:///C:/Develops/study_publishings/docs/temp.html

http://127.0.0.1:5500/docs/temp.html

=> docs 뒤에 있는 파일명은 브라우저에서 바로 바꿔서 해당하는 프로그램을 바로 브라우저에 띄울 수 있음
(대신 go live를 먼저 실행시켜야 함)


<11/23>

row: 행
column: 열
<th>: 구분자 => th를 쓰면 볼드체로 표현됨
<tbody>: 그룹태그 => 내가 넣지 않아도 알아서 넣어줌/헤드부분에 고정을 시켜야 할 때 넣어줘야 함/평상시에는 필요 X

형상관리 툴: 소스의 형상을 관리하는 툴/저장하는 시점을 히스토리로 남김 => VCS(version control system)
그 중에 하나가 git -> github

github ->프로필 선택 -> your repositories

<실습>
소제목은 <h1>
밑에 부분은 <div>

<ip주소 찾기>
찾기 -> cmd -> 명령 프롬프트
vs code의 명령어: code
ip 주소 찾기 명령어: ipconfig ->이더넷 어댑터 이더넷 -> IPv4 주소: 192.168.0.136

http://192.168.0.136:5500/docs/tables.html
 =>내 pc로 볼때는 127.0.0.1이나 ip주소인 192.168.0.136는 동일함
하지만 제 3자의 pc에서 볼때는 127.0.0.1인 유효하지 않음
제 3자의 pc가 고유 ip주소로 타인의 pc로 들어갈 수 있음

항상 go live를 켜놔야 함/ 그래야지 ip주소로 접속가능

ctrl + f => 찾기 기능
\ => 역 슬래시
/ => 슬래시

/는 폴더와 폴더 사이의 구분자

<상대경로에서 사용하는 방법>
나를 표현하는 폴더: ./ (window에서는 .\) =>현재 폴더라는 의미
해당 폴더가 포함되어 있던 상위폴더를 나타내는 표현: ../ (window에서는 ..\)

<11/24>
소스코드 작성할 때
1. 뼈대를 먼저 구성 -> 코딩 -> 디자인

코드의 정렬을 할 시에 마우스 우클릭 -> 문자 서식(=format document)

forms: 파일과 파일을 연결해주는 동시에 정보전달(=>내가 입력한 정보)까지 해준다
input을 사용할 때는 항상 form으로 감싸줘야 한다.

실무에서는 a tag보단 form tag를 사용하는 것이 좋다.

http://127.0.0.1:5500/docs/HTMLs/welcome.html?양말=색색+양말 =>밑에 소스를 해석해서 우리한테 표현해주는 주소
http://127.0.0.1:5500/docs/HTMLs/welcome.html?%EC%96%91%EB%A7%90=%EC%83%89%EC%83%89+%EC%96%91%EB%A7%90
=>실제로 인터넷상 날아다니는 주소

input의 name은 무조건 영어로 부여

http://127.0.0.1:5500/docs/HTMLs/welcome.html?요주랩+양말&socks_count=100
=>&는 _와 같은 의미

form이 있으면 input이 들어가고 대부분 button이 들어감 
정보전달 태그 => form
input 태그의 name부분이 브라우저 경로로 들어가게 된다.

<11/27>
semantics는 html보단 css를 위한 문법이라고 할 수 있음
대부분 쓰지 않아도 상관은 없지만 영역을 알 수 있게 해주는 기능이 있다.
정보 수집할 때 용이함.
<footer>, <main> => 사용자를 위한 태그가 아닌 브라우저와 개발자를 위한 태그이다.

select: drop-down list를 만들어주는 태그
select는 최소한 label태그와 option태그를 같이 쓴다.

github
id: rugkfl
password: gkdlqkfkdkdl1412

github와 vscode를 이어주는 매개체가 git
프로그램이 연계되기 위해서는 인증이 필요
고로 git를 사용할 때 인증 필


git config --global user.name "rugkfl"
git config --global user.email "kimgyoungha61@gmail.com"

push => 내보내기
pull => 가져오기(commit이전에 pull)
clone => 전체 내용 가져오기(해당 기능을 통해 회사가 아닌 집에서도 해당 내용을 볼 수 있다.)
문제가 생겼을 경우 다른 폴더에 해당 폴더를 집어넣은 후 해당 폴더를 삭제하여 다시 clone을 하여 사용한다.(최악의 경우에만 사용한다.)

commit을 누르기 전에는 꼭 내용을 입력해야 하고 그 이후 push를 눌러서 업로드
같은 파일을 수정한 경우 commit을 누르기 전에 pull을 눌러 내용을 당겨온 후 commit을 누르고 push를 눌러 다시 업로드 한다.
다른 파일을 수정한 경우 바로 commit을 누르고 push를 할 수 있다.

git를 쓰는 이유=> 협업

<11/28>
CSS: 변화 대상(글자, 이미지, 태그)에 색상, 굵기, 재배치 하는 것

github의 setting으로 가서 

external CSS: 실제 사용 방식 => css 파일을 따로 빼놓는 것

자식태그는 나를 기준으로 바로 아래에 있는 것
자손태그는 그 밑에부터 모두 다
부모태그는 나를 기준으로 바로 위에 있는 것
조상태그는 모든 태그의 최상위에 있는 것

<11/30>
상위폴더: ../
현재폴더: ./
하위폴더: ./[folder name]

cmd의 cd는 폴더이동의 명령어
cmd - powershell(사촌개념)

C:\Users

탐색기에서 해당하는 폴더로 이동 -> 해당 주소 복사 -> powershell에 cd 해당 폴더 붙어넣기 =>그럼 해당 폴더로 바뀜
-> code ./(현재폴더) -> vscode 열림

bootstrap은 기본적으로 grid로 시작하고 table과 매우 유사
행과 열을 div로 나눈다
ex) 	<div>
		<div></div>
		<div></div>
	</div>
하지만 열의 개수가 12개로 제한되어 있다.
그래서 %로 움직인다.
컬럼단위로만 움직인다.
열 div안에 div가 들어가면 열이 12개가 더 생성되고 겉 열div가 셀 안의 행이 된다.
이런식으로 무한대로 쪼갤 수 있음
셀 단위로 봐야함

CDN (Content Delivery Network): 인터넷에서 가져와서 쓰는 것(링크로)