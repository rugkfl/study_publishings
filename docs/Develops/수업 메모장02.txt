파이썬 (python)

<12/04>
kernal = OS
프로그램을 실행시키면 메모리에 올라간다. 격리된 메모리 공간에 올라가고 다른 내용이 침범하지 않는다.

>라는(특정시점) 커서가 보이면 메모리에서 내려갔다는 의미(반환) => 메모리는 (컴퓨터의 자원은) 한정적이기 때문

메모리에 올라갔다가 안내려가는 것 => 서버(server)

인간의 단어 = 컴퓨터의 변수

가정 : if문
반복 : for문, while문

run -> start Debugging(f5)
의미를 부여한다 = 할당한다

줄바꿈(enter)을 하면 문장이 끝났다고 판단

:(콜론)을 쓰면 줄바꿈은 했지만 하나로 묶어서 실행하겠다는 의미

<12/05>
map(int, input( ).split( ) ) => map에 int와 input().split()을 넣으면 split의 결과를 모두 int로 변환시켜 줌(실수는 int대신 float)


input은 입력된 값을 문자열로 인식/ 괄호 안에 아무것도 적지 않으면 공백의 입력란만 나옴
입력값으로 숫자를 인식하기 위해서는 int 함수 이용 => 괄호 안에 들어간 것을 정수형으로 바꿔줌
입력값을 두개 이상으로 구분할려면 split 함수를 이용 => 한 문자열을 / 나누어 / 리스트로 구분 => 기본형을 이용하면 띄어쓰기 기준으로 구분해줌
괄호 안에 특정 문자 등을 넣으면, 해당 문자를 기준으로 문장이 나뉨

문자열: string
숫자 : num

 File "C:\Develops\study_pythons\docs\inputs.py", line 14, in <module>
    num_age = 2023 - num_input_birthyear
              ~~~~~^~~~~~~~~~~~~~~~~~~~~
TypeError: unsupported operand type(s) for -: 'int' and 'str'

해결방법 1) 에러난 곳에 브레이크 포인트 걸기 -> 실행시키기 -> debug console -> 에러 부분 복붙해서 입력창에 넣고 재현해보기 -> 문제부분 type을 확인해보기(type(에러부분) 대신 입력문자 도움글이 떴을 때는 enter가 아닌 tab을 누르기
해결방법 2)

터미널에 들어오는 값은 무조건 string

== 비교문자

index는 리스트 중에서 특정한 값이 몇번 째 위치해 있는지 알려주는 문법입니다.

function은 코드를 재사용할 수 있도록 도와주는 기능입니다.

try/ except =>예외 처리
=> try에 실행할 코드를 넣고 except에 예외가 발생했을 때 처리하는 코드
------------------------------------------------------------------------------------------------------------------
range는 정수만 인자로 받음
docs/solving_problems


docker run --name learn_mongo -p 27017:27017 -d mongo

{"name": "", "color": "", "origin": ""}

db.fruits.insertOne({"name":"","color":"","origin":""}

{"name_first": "바나나", "color": "노란색", "origin_first": "필리핀"}db.fruits.insertOne( )



db.local.cars_infor.insertOne({"make": "","model": "","year": "","color": ""}

db.local.cars_infor.insertOne({"make": "BMW", "model": "520d", "year": 2022, "color": "red"})
cars = [
    {"make": "Hyundai", "model": "Sonata", "year": 2020, "color": "blue"},
    {"make": "Kia", "model": "K5", "year": 2021, "color": "white"},
    {"make": "Chevrolet", "model": "Malibu", "year": 2019, "color": "black"},
    {"make": "BMW", "model": "520d", "year": 2022, "color": "red"},
]


{"name": "오렌지", "color": "주황색", "origin": "미국"}


mongodb는 NoSQL 방식의 데이터베이스 관리 시스템으로 다양한 데이터 형식을 처리하고 저장한다.



[ { category : { $in : ["Event"] }, { likes : { $gt : 4 } } ]

[ { category : { $in : ["Event", "Tech"] } }, { likes : { $gt : 4 } } ]


CRUD
대부분의 컴퓨터 소프트웨어가 가지는 기본적인 데이터 처리 기능으로 생성, 읽기, 갱신, 삭제를 의미한다.

mongodb find 컬렉션에서 문서를 검색하는 데 사용되는 문법입니다.

--------------------------------------------------------------------------


# id_list = []
# title_list = []
# description_list = []



# id = todo_list_connect.find({}, {'_id' : 1, 'title': 0})
# titles = todo_list_connect.find({}, {'_id': 0, 'title': 1})
# descriptions = todo_list_connect.find({}, {'_id': 0, 'description': 1 })

# for title in titles :
#     title_list.append(title)
# for description in descriptions :
#     description_list.append(description)
# for ids in id_list :
#     id_list.append(ids)

-------------------------------------------------
if str_input == "c":
            pass
    else:
            break
    if str_input == "q":
            print("------------------")
            continue
    elif str_input =="x":
        print("------------------")
        print("프로그램이 종료되었습니다.")
        break

------------------------------------------
192.168.0.136


mongodb://192.168.0.14:27017


-------------------------------------
collection => problem_list/ userscore

coulmn => user_name/user_answer 1~n/user_score

mongodb update 
document를 수정하기 위한 메소드입니다.

mongodb insert
document를 collection에 삽입하기 위한 메소드입니다.

http://127.0.0.1:5502/docs/index.html
http://127.0.0.1localhost:5502/docs/index.html

http://127.0.0.1:5500/docs/solving_problems/index.html

mongodb://localhost:27017
mongodb://127.0.0.1:27017


https://www.naver.com/

https://www.naver.com:443/

 223.130.200.107
https://223.130.200.107:443/


https://192.175.52:443/
192.175.52

http://korea-hrd.co.kr:80/

----------------------------------------------
* 웹 크롤링 동작
- chrome browser 열기
- 주소 https://www.w3schools.com/index.html 입력
- 가능 여부에 대한 OK 받음
- html 파일 받음(and 확인)
- 정보 획득


'C:\Users\서울디지털인재개발원\.wdm\drivers\chromedriver\win64\120.0.6099.109\chromedriver-win32/chromedriver.exe'

웹 크롤링
웹상의 정보들을 탐색하고 수집하는 작업을 의미한다.
